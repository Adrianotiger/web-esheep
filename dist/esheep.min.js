"use strict";var _createClass=function(){function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var VERSION="0.7.1",ACTIVATE_DEBUG=!1,DEFAULT_XML="http://esheep.petrucci.ch/script/animation.php",COLLISION_WITH=["div","hr"],eSheep=function(){function eSheep(e){_classCallCheck(this,eSheep),this.animationFile=DEFAULT_XML,this.id=Date.now()+Math.random(),this.DOMdiv=document.createElement("div"),this.DOMdiv.setAttribute("id",this.id),this.DOMimg=document.createElement("img"),this.DOMinfo=document.createElement("div"),this.parser=new DOMParser,this.xmlDoc=null,this.isChild=null!=e,this.tilesX=1,this.tilesY=1,this.imageW=1,this.imageH=1,this.imageX=1,this.imageY=1,this.flipped=!1,this.dragging=!1,this.infobox=!1,this.animationId=0,this.animationStep=0,this.animationNode=null,this.sprite=new Image,this.HTMLelement=null,this.randS=100*Math.random(),this.screenW=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,this.screenH=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}return _createClass(eSheep,[{key:"Start",value:function(e){void 0!==e&&null!=e&&(this.animationFile=e);var t=new XMLHttpRequest,i=this;t.open("GET",this.animationFile,!0),t.addEventListener("readystatechange",function(){4==this.readyState&&(200==this.status?i._parseXML(this.responseText):console.error("XML not available:"+this.statusText+"\n"+this.responseText))}),t.send(null)}},{key:"remove",value:function(){this.DOMdiv=this.DOMimg=this.DOMinfo=null,document.getElementById(this.id).outerHTML=""}},{key:"_parseXML",value:function(e){var n=this;this.xmlDoc=this.parser.parseFromString(e,"text/xml");var t=this.xmlDoc.getElementsByTagName("image")[0];this.tilesX=t.getElementsByTagName("tilesx")[0].textContent,this.tilesY=t.getElementsByTagName("tilesy")[0].textContent,this.sprite.addEventListener("load",function(){ACTIVATE_DEBUG&&console.log("Sprite image loaded");var e="width:"+n.sprite.width+"px;height:"+n.sprite.height+"px;position:absolute;top:0px;left:0px;max-width: none;";n.DOMimg.setAttribute("style",e),n.DOMimg.addEventListener("dragstart",function(e){return e.preventDefault(),!1}),n.imageW=n.sprite.width/n.tilesX,n.imageH=n.sprite.height/n.tilesY,e="width:"+n.imageW+"px;height:"+n.imageH+"px;position:fixed;top:"+n.imageY+"px;left:"+n.imageX+"px;transform:rotatey(0deg);cursor:move;z-index:2000;overflow:hidden;",n.DOMdiv.setAttribute("style",e),n.DOMdiv.appendChild(n.DOMimg),n.isChild?n._spawnChild():n._spawnESheep()}),this.sprite.src="data:image/png;base64,"+t.getElementsByTagName("png")[0].textContent,this.DOMimg.setAttribute("src",this.sprite.src),this.DOMdiv.addEventListener("mousemove",function(e){if(!n.dragging&&1==e.buttons&&0==e.button){n.dragging=!0,n.HTMLelement=null;for(var t=n.xmlDoc.getElementsByTagName("animations")[0].getElementsByTagName("animation"),i=0;i<t.length;i++)if("drag"==t[i].getElementsByTagName("name")[0].textContent){n.animationId=t[i].getAttribute("id"),n.animationStep=0,n.animationNode=t[i];break}}}),document.body.addEventListener("mousemove",function(e){n.dragging&&(n.imageX=parseInt(e.clientX)-n.imageW/2,n.imageY=parseInt(e.clientY)-n.imageH/2,n.DOMdiv.style.left=n.imageX+"px",n.DOMdiv.style.top=n.imageY+"px")}),document.body.addEventListener("resize",function(){n.screenW=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n.screenH=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,n.imageY+n.imageH>n.screenH&&(n.imageY=n.screenH-n.imageH,n.DOMdiv.style.top=n.imageY+"px"),n.imageX+n.imageW>n.screenW&&(n.imageX=n.screenW-n.imageW,n.DOMdiv.style.left=n.imageX+"px")}),this.DOMdiv.addEventListener("contextmenu",function(e){return e.preventDefault(),!1}),this.DOMdiv.addEventListener("mouseup",function(){n.dragging?n.dragging=!1:n.infobox?(n.DOMinfo.style.display="none",n.infobox=!1):(n.DOMinfo.style.left=Math.min(n.screenW-200,Math.max(0,parseInt(n.imageX+n.imageW/2-parseInt(n.DOMinfo.style.width)/2)))+"px",n.DOMinfo.style.top=parseInt(n.imageY-parseInt(n.DOMinfo.style.height))+"px",n.DOMinfo.style.display="block",n.infobox=!0)}),this.DOMinfo.addEventListener("mouseup",function(e){n.DOMinfo.style.display="none",n.infobox=!1});this.DOMinfo.setAttribute("style","width:200px;height:100px;position:fixed;top:100px;left:10px;display:none;border-width:2px;border-radius:5px;border-style:ridge;border-color:#0000ab;text-align:center;text-shadow: 1px 1px 3px #ffff88;box-shadow: 3px 3px 10px #888888;color:black;opacity:0.9;z-index:9999;overflow:auto;background: linear-gradient(to bottom right, rgba(128,128,255,0.7), rgba(200,200,255,0.4));");var i=document.createElement("b").appendChild(document.createTextNode("eSheep")),a=document.createElement("sup"),s=document.createElement("a");a.appendChild(document.createTextNode("ver: "+VERSION)),a.setAttribute("style","float:right"),s.appendChild(document.createTextNode("http://esheep.petrucci.ch")),s.setAttribute("href","http://esheep.petrucci.ch"),s.setAttribute("target","_blank"),this.DOMinfo.appendChild(i),this.DOMinfo.appendChild(a),this.DOMinfo.appendChild(document.createElement("br")),this.DOMinfo.appendChild(document.createElement("hr")),this.DOMinfo.appendChild(document.createTextNode("Visit the home page of this lovely sheep:")),this.DOMinfo.appendChild(document.createElement("br")),this.DOMinfo.appendChild(s),document.body.appendChild(this.DOMinfo),document.body.appendChild(this.DOMdiv)}},{key:"_setPosition",value:function(e,t,i){this.DOMdiv&&(i?(this.imageX=parseInt(e),this.imageY=parseInt(t)):(this.imageX=parseInt(this.imageX)+parseInt(e),this.imageY=parseInt(this.imageY)+parseInt(t)),this.DOMdiv.style.left=this.imageX+"px",this.DOMdiv.style.top=this.imageY+"px")}},{key:"_spawnESheep",value:function(){for(var e=this.xmlDoc.getElementsByTagName("spawns")[0].getElementsByTagName("spawn"),t=0,i=0;i<e.length;i++)t+=parseInt(e[0].getAttribute("probability"));var n=Math.random()*t;for(i=t=0;i<e.length;i++)if(n<=(t+=parseInt(e[i].getAttribute("probability")))||i==e.length-1){this._setPosition(this._parseKeyWords(e[i].getElementsByTagName("x")[0].textContent),this._parseKeyWords(e[i].getElementsByTagName("y")[0].textContent),!0),ACTIVATE_DEBUG&&console.log("Spawn: "+this.imageX+", "+this.imageY),this.animationId=e[i].getElementsByTagName("next")[0].textContent,this.animationStep=0;for(var a=this.xmlDoc.getElementsByTagName("animations")[0].getElementsByTagName("animation"),s=0;s<a.length;s++)if(a[s].getAttribute("id")==this.animationId){this.animationNode=a[s];a=this.xmlDoc.getElementsByTagName("childs")[0].getElementsByTagName("child");for(var o=0;o<a.length;o++)if(a[o].getAttribute("animationid")==this.animationId){ACTIVATE_DEBUG&&console.log("Child from Spawn");var m=new eSheep(!0);m.animationId=a[o].getElementsByTagName("next")[0].textContent;var h=a[o].getElementsByTagName("x")[0].textContent,r=a[o].getElementsByTagName("y")[0].textContent;m._setPosition(this._parseKeyWords(h),this._parseKeyWords(r),!0),m.Start(this.animationFile);break}break}break}this._nextESheepStep()}},{key:"_spawnChild",value:function(){for(var e=this.xmlDoc.getElementsByTagName("animations")[0].getElementsByTagName("animation"),t=0;t<e.length;t++)if(e[t].getAttribute("id")==this.animationId){this.animationNode=e[t];break}this._nextESheepStep()}},{key:"_parseKeyWords",value:function _parseKeyWords(value){value=value.replace(/screenW/g,this.screenW),value=value.replace(/screenH/g,this.screenH),value=value.replace(/areaW/g,this.screenH),value=value.replace(/areaH/g,this.screenH),value=value.replace(/imageW/g,this.imageW),value=value.replace(/imageH/g,this.imageH),value=value.replace(/random/g,100*Math.random()),value=value.replace(/randS/g,this.randS),value=value.replace(/imageX/g,this.imageX),value=value.replace(/imageY/g,this.imageY);var ret=0;try{ret=eval(value)}catch(e){console.error("Unable to parse this position: \n'"+value+"'\n Error message: \n"+e.message)}return ret}},{key:"_getNextRandomNode",value:function(e){var t=e.getElementsByTagName("next"),i=this.xmlDoc.getElementsByTagName("animations")[0].getElementsByTagName("animation"),n=0,a=!1;if(0==t.length)return this.isChild?(ACTIVATE_DEBUG&&console.log("Remove child"),document.body.removeChild(this.DOMinfo),document.body.removeChild(this.DOMdiv)):this._spawnESheep(),!1;for(var s=0;s<t.length;s++)n+=parseInt(t[s].getAttribute("probability"));var o=Math.random()*n,m=0;for(s=n=0;s<t.length;s++)if(o<=(n+=parseInt(t[s].getAttribute("probability")))){m=s;break}for(s=0;s<i.length;s++)if(i[s].getAttribute("id")==t[m].textContent){this.animationId=i[s].getAttribute("id"),this.animationStep=0,this.animationNode=i[s],a=!0;break}if(a){i=this.xmlDoc.getElementsByTagName("childs")[0].getElementsByTagName("child");for(s=0;s<i.length;s++)if(i[s].getAttribute("animationid")==this.animationId){ACTIVATE_DEBUG&&console.log("Child from Animation");var h=new eSheep(!0);h.animationId=i[s].getElementsByTagName("next")[0].textContent;var r=i[s].getElementsByTagName("x")[0].textContent,l=i[s].getElementsByTagName("y")[0].textContent;h._setPosition(this._parseKeyWords(r),this._parseKeyWords(l),!0),h.Start(this.animationFile);break}}return a}},{key:"_checkOverlapping",value:function(){var e,t=this.imageX,i=this.imageY+this.imageH,n=20;for(var a in this.HTMLelement&&(n=5),COLLISION_WITH)for(var s=document.body.getElementsByTagName(COLLISION_WITH[a]),o=0;o<s.length;o++)if(i>(e=s[o].getBoundingClientRect()).top-2&&i<e.top+n&&t>e.left&&t<e.right-this.imageW){var m=window.getComputedStyle(s[o]);if(""!=m.borderTopStyle&&"none"!=m.borderTopStyle&&"none"!=m.display)return s[o]}return!1}},{key:"_getNodeValue",value:function(e,t,i){if(this.animationNode&&this.animationNode.getElementsByTagName(e)){if(this.animationNode.getElementsByTagName(e)[0].getElementsByTagName(t)[0]){var n=this.animationNode.getElementsByTagName(e)[0].getElementsByTagName(t)[0].textContent;return this._parseKeyWords(n)}return i}}},{key:"_nextESheepStep",value:function(){var e,t=this._getNodeValue("start","x",0),i=this._getNodeValue("start","y",0),n=(this._getNodeValue("start","offsety",0),this._getNodeValue("start","opacity",1),this._getNodeValue("start","interval",1e3)),a=this._getNodeValue("end","x",0),s=this._getNodeValue("end","y",0),o=(this._getNodeValue("end","offsety",0),this._getNodeValue("end","interval",1),this._getNodeValue("end","interval",1e3)),m=this._parseKeyWords(this.animationNode.getElementsByTagName("sequence")[0].getAttribute("repeat")),h=this.animationNode.getElementsByTagName("sequence")[0].getAttribute("repeatfrom"),r=this.animationNode.getElementsByTagName("gravity"),l=this.animationNode.getElementsByTagName("border"),g=this.animationNode.getElementsByTagName("frame").length+(this.animationNode.getElementsByTagName("frame").length-h)*m;if(e=this.animationStep<this.animationNode.getElementsByTagName("frame").length?this.animationNode.getElementsByTagName("frame")[this.animationStep].textContent:0==h?this.animationNode.getElementsByTagName("frame")[this.animationStep%this.animationNode.getElementsByTagName("frame").length].textContent:this.animationNode.getElementsByTagName("frame")[parseInt(h)+parseInt((this.animationStep-h)%(this.animationNode.getElementsByTagName("frame").length-h))].textContent,this.DOMimg.style.left=-this.imageW*(e%this.tilesX)+"px",this.DOMimg.style.top=-this.imageH*parseInt(e/this.tilesX)+"px",this.dragging||this.infobox)return this.animationStep++,void setTimeout(this._nextESheepStep.bind(this),50);if(this.flipped&&(t=-t,a=-a),0==this.animationStep?this._setPosition(t,i,!1):this._setPosition(parseInt(t)+parseInt((a-t)*this.animationStep/g),parseInt(i)+parseInt((s-i)*this.animationStep/g),!1),this.animationStep++,this.animationStep>=g){if(this.animationNode.getElementsByTagName("action")[0])switch(this.animationNode.getElementsByTagName("action")[0].textContent){case"flip":"rotateY(0deg)"==this.DOMdiv.style.transform?(this.DOMdiv.style.transform="rotateY(180deg)",this.flipped=!0):(this.DOMdiv.style.transform="rotateY(0deg)",this.flipped=!1)}if(!this._getNextRandomNode(this.animationNode.getElementsByTagName("sequence")[0]))return}var d=!1;return l&&l[0]&&l[0].getElementsByTagName("next")&&(a<0&&this.imageX<0?d=!(this.imageX=0):0<a&&this.imageX>this.screenW-this.imageW?(this.imageX=this.screenW-this.imageW,this.DOMdiv.style.left=parseInt(this.imageX)+"px",d=!0):s<0&&this.imageY<0?d=!(this.imageY=0):0<s&&this.imageY>this.screenH-this.imageH?(this.imageY=this.screenH-this.imageH,d=!0):0<s?this._checkOverlapping()&&this.imageY>this.imageH&&(this.HTMLelement=this._checkOverlapping(),this.imageY=Math.ceil(this.HTMLelement.getBoundingClientRect().top)-this.imageH,d=!0):this.HTMLelement&&(this._checkOverlapping()||(this.imageY+this.imageH>this.HTMLelement.getBoundingClientRect().top+3||this.imageY+this.imageH<this.HTMLelement.getBoundingClientRect().top-3?this.HTMLelement=null:(this.imageX<this.HTMLelement.getBoundingClientRect().left?this.imageX=parseInt(this.imageX+3):this.imageX=parseInt(this.imageX-3),d=!0),this.DOMdiv.style.left=parseInt(this.imageX)+"px")),d&&!this._getNextRandomNode(l[0]))||!d&&r&&r[0]&&r[0].getElementsByTagName("next")&&this.imageY<this.screenH-this.imageH-2&&(null==this.HTMLelement?d=!0:this._checkOverlapping()||(d=!0,this.HTMLelement=null),d&&!this._getNextRandomNode(r[0]))?void 0:!d&&(this.imageX<-this.imageW&&a<0||this.imageX>this.screenW&&0<a||this.imageY<-this.imageH&&i<0||this.imageY>this.screenH&&0<s)?(d=!0,void(this.isChild||this._spawnESheep())):void setTimeout(this._nextESheepStep.bind(this),parseInt(n)+parseInt((o-n)*this.animationStep/g))}}]),eSheep}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzaGVlcC5taW4uanMiXSwibmFtZXMiOlsiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJUeXBlRXJyb3IiLCJWRVJTSU9OIiwiQUNUSVZBVEVfREVCVUciLCJERUZBVUxUX1hNTCIsIkNPTExJU0lPTl9XSVRIIiwiZVNoZWVwIiwiaXNDaGlsZCIsInRoaXMiLCJhbmltYXRpb25GaWxlIiwiaWQiLCJEYXRlIiwibm93IiwiTWF0aCIsInJhbmRvbSIsIkRPTWRpdiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsIkRPTWltZyIsIkRPTWluZm8iLCJwYXJzZXIiLCJET01QYXJzZXIiLCJ4bWxEb2MiLCJ0aWxlc1giLCJ0aWxlc1kiLCJpbWFnZVciLCJpbWFnZUgiLCJpbWFnZVgiLCJpbWFnZVkiLCJmbGlwcGVkIiwiZHJhZ2dpbmciLCJpbmZvYm94IiwiYW5pbWF0aW9uSWQiLCJhbmltYXRpb25TdGVwIiwiYW5pbWF0aW9uTm9kZSIsInNwcml0ZSIsIkltYWdlIiwiSFRNTGVsZW1lbnQiLCJyYW5kUyIsInNjcmVlblciLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50V2lkdGgiLCJib2R5Iiwic2NyZWVuSCIsImlubmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwidmFsdWUiLCJhbmltYXRpb24iLCJhamF4IiwiWE1MSHR0cFJlcXVlc3QiLCJzaGVlcENsYXNzIiwib3BlbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwiX3BhcnNlWE1MIiwicmVzcG9uc2VUZXh0IiwiY29uc29sZSIsImVycm9yIiwic3RhdHVzVGV4dCIsInNlbmQiLCJnZXRFbGVtZW50QnlJZCIsIm91dGVySFRNTCIsInRleHQiLCJfdGhpcyIsInBhcnNlRnJvbVN0cmluZyIsImltYWdlIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJ0ZXh0Q29udGVudCIsImxvZyIsImF0dHJpYnV0ZSIsIndpZHRoIiwiaGVpZ2h0IiwiZSIsInByZXZlbnREZWZhdWx0IiwiYXBwZW5kQ2hpbGQiLCJfc3Bhd25DaGlsZCIsIl9zcGF3bkVTaGVlcCIsInNyYyIsImJ1dHRvbnMiLCJidXR0b24iLCJjaGlsZHMiLCJrIiwiZ2V0QXR0cmlidXRlIiwicGFyc2VJbnQiLCJjbGllbnRYIiwiY2xpZW50WSIsInN0eWxlIiwibGVmdCIsInRvcCIsImRpc3BsYXkiLCJtaW4iLCJtYXgiLCJodG1sVCIsImNyZWF0ZVRleHROb2RlIiwiaHRtbFYiLCJodG1sTCIsIngiLCJ5IiwiYWJzb2x1dGUiLCJzcGF3bnMiLCJwcm9iIiwicmFuZCIsIl9zZXRQb3NpdGlvbiIsIl9wYXJzZUtleVdvcmRzIiwiaiIsImVTaGVlcENoaWxkIiwiU3RhcnQiLCJfbmV4dEVTaGVlcFN0ZXAiLCJyZXBsYWNlIiwicmV0IiwiZXZhbCIsImVyciIsIm1lc3NhZ2UiLCJwYXJlbnROb2RlIiwiYmFzZU5vZGUiLCJub2RlRm91bmQiLCJyZW1vdmVDaGlsZCIsImluZGV4IiwicmVjdCIsIm1hcmdpbiIsImVscyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInJpZ2h0IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImJvcmRlclRvcFN0eWxlIiwibm9kZU5hbWUiLCJ2YWx1ZU5hbWUiLCJkZWZhdWx0VmFsdWUiLCJ4MSIsIl9nZXROb2RlVmFsdWUiLCJ5MSIsImRlbDEiLCJ4MiIsInkyIiwiZGVsMiIsInJlcGVhdCIsInJlcGVhdGZyb20iLCJncmF2aXR5IiwiYm9yZGVyIiwic3RlcHMiLCJzZXRUaW1lb3V0IiwiYmluZCIsInRyYW5zZm9ybSIsIl9nZXROZXh0UmFuZG9tTm9kZSIsInNldE5leHQiLCJfY2hlY2tPdmVybGFwcGluZyIsImNlaWwiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBSUEsYUFBZSxXQUFjLFNBQVNDLEVBQWlCQyxFQUFRQyxHQUFTLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJRCxFQUFNRSxPQUFRRCxJQUFLLENBQUUsSUFBSUUsRUFBYUgsRUFBTUMsR0FBSUUsRUFBV0MsV0FBYUQsRUFBV0MsYUFBYyxFQUFPRCxFQUFXRSxjQUFlLEVBQVUsVUFBV0YsSUFBWUEsRUFBV0csVUFBVyxHQUFNQyxPQUFPQyxlQUFlVCxFQUFRSSxFQUFXTSxJQUFLTixJQUFpQixPQUFPLFNBQVVPLEVBQWFDLEVBQVlDLEdBQWlKLE9BQTlIRCxHQUFZYixFQUFpQlksRUFBWUcsVUFBV0YsR0FBaUJDLEdBQWFkLEVBQWlCWSxFQUFhRSxHQUFxQkYsR0FBN2dCLEdBRW5CLFNBQVNJLGdCQUFnQkMsRUFBVUwsR0FBZSxLQUFNSyxhQUFvQkwsR0FBZ0IsTUFBTSxJQUFJTSxVQUFVLHFDQXNEaEgsSUFBSUMsUUFBVSxRQUNWQyxnQkFBaUIsRUFDakJDLFlBQWMsaURBQ2RDLGVBQWlCLENBQUMsTUFBTyxNQVF6QkMsT0FBUyxXQUNYLFNBQVNBLE9BQU9DLEdBQ2RSLGdCQUFnQlMsS0FBTUYsUUFJdEJFLEtBQUtDLGNBQWdCTCxZQUVyQkksS0FBS0UsR0FBS0MsS0FBS0MsTUFBUUMsS0FBS0MsU0FFNUJOLEtBQUtPLE9BQVNDLFNBQVNDLGNBQWMsT0FDckNULEtBQUtPLE9BQU9HLGFBQWEsS0FBTVYsS0FBS0UsSUFDcENGLEtBQUtXLE9BQVNILFNBQVNDLGNBQWMsT0FDckNULEtBQUtZLFFBQVVKLFNBQVNDLGNBQWMsT0FFdENULEtBQUthLE9BQVMsSUFBSUMsVUFDbEJkLEtBQUtlLE9BQVMsS0FFZGYsS0FBS0QsUUFBcUIsTUFBWEEsRUFFZkMsS0FBS2dCLE9BQVMsRUFDZGhCLEtBQUtpQixPQUFTLEVB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c0JBTVhnRSxXQUFXeEksS0FBS3VHLGdCQUFnQmtDLEtBQUt6SSxNQUFPK0UsU0FBU2dELEdBQVFoRCxVQUFVbUQsRUFBT0gsR0FBUS9ILEtBQUswQixjQUFnQjZHLFFBSXhHekksT0Fua0JJIiwiZmlsZSI6ImVzaGVlcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLypcclxuICogUHJvamVjdDpcclxuICogICAgICAgICAgICAgICAgZVNoZWVwIC0gV2VicGFnZVxyXG4gKlxyXG4gKiBEYXRlOlxyXG4gKiAgICAgICAgICAgICAgICAwNC5hcHJpbCAyMDE4XHJcbiAqXHJcbiAqIEF1dGhvcjpcclxuICogICAgICAgICAgICAgICAgQWRyaWFubyBQZXRydWNjaSAoaHR0cDovL2VzaGVlcC5wZXRydWNjaS5jaClcclxuICpcclxuICogVmVyc2lvbjogICAgICAgMC43LjFcclxuICpcclxuICogSW50cm9kdWN0aW9uOlxyXG4gKiAgICAgICAgICAgICAgICBBcyBcIndyYXBwZXJcIiBmb3IgdGhlIE9wZW5Tb3VyY2UgQyMgcHJvamVjdFxyXG4gKiAgICAgICAgICAgICAgICAoc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9BZHJpYW5vdGlnZXIvZGVza3RvcFBldCksXHJcbiAqICAgICAgICAgICAgICAgIHRoaXMgamF2YXNjcmlwdCBcImNsYXNzXCIgd2FzIHdyaXR0ZW4gdG8gZ2V0IHRoZSBhbmltYXRpb25zIGFsc28gaW5zaWRlIHlvdXJcclxuICogICAgICAgICAgICAgICAgd2VicGFnZS4gSXQgZG9lc24ndCB3b3JrIGxpa2UgdGhlIFdpbmRvd3MgdmVyc2lvbiwgYnV0IHNob3cgbXVjaCBhbmltYXRpb25zIGZyb20gaXQuXHJcbiAqXHJcbiAqIERlc2NyaXB0aW9uOlxyXG4gKiAgICAgICAgICAgICAgICBBZGQgYSB3YWxraW5nIHBldCAoc2hlZXAgdG8geW91ciBob21lIHBhZ2UpIHdpdGgganVzdCBhIGZldyBsaW5lcyBvZiBjb2RlIVxyXG4gKiAgICAgICAgICAgICAgICBXaWxsIGFkZCBhIGxvdmVseSBzaGVlcCAoc3RyYXkgc2hlZXApIGFuZCB0aGlzIHdpbGwgd2FsayBhcm91bmQgeW91ciBwYWdlIGFuZCBvdmVyXHJcbiAqICAgICAgICAgICAgICAgIGFsbCA8aHI+cyBhbmQgPGRpdj5zIHdpdGggYSBib3JkZXIuIFlvdSBjYW4gYWxzbyBzZWxlY3QgYW5vdGhlciBhbmltYXRpb24sIHVzaW5nIHlvdXJcclxuICogICAgICAgICAgICAgICAgcGVyc29uYWwgWE1MIGZpbGUgb3Igb25lIGZyb20gdGhlIGRhdGFiYXNlLlxyXG4gKlxyXG4gKiBIb3cgdG8gdXNlOlxyXG4gKiAgICAgICAgICAgICAgICBBZGQgdGhpcyBsaW5lIGluIHlvdXIgPGhlYWRlcj46XHJcbiAqICAgICAgICAgICAgICAgIDxzY3JpcHQgc3JjPVwiaHR0cDovL2VzaGVlcC5wZXRydWNjaS5jaC9zY3JpcHQvRGVza3RvcFBldC5qc1wiPjwvc2NyaXB0PlxyXG4gKiAgICAgICAgICAgICAgICBBZGQgdGhpcyBsaW5lcyBpbiB5b3VyIDxib2R5PiAoYXQgdGhlIGVuZCBpZiBwb3NzaWJsZSk6XHJcbiAqICAgICAgICAgICAgICAgIDxzY3JpcHQ+XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBldCA9IG5ldyBFU2hlZXAoKTtcclxuICAgICAgICAgICAgICAgICAgICBwZXQuU3RhcnQoJ2h0dHA6Ly9lc2hlZXAucGV0cnVjY2kuY2gvc2NyaXB0L2FuaW1hdGlvbi54bWwnKTtcclxuICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+XHJcbiAqICAgICAgICAgICAgICAgIFRoYXQncyBhbGwhXHJcbiAqXHJcbiAqIFJlcXVpcmVtZW50OlxyXG4gKiAgICAgICAgICAgICAgICBUZXN0ZWQgb24gSUUxMSwgRWRnZSBhbmQgT3BlcmFcclxuICpcclxuICogQ2hhbmdlbG9nOlxyXG4gKiAgICAgICAgICAgICAgICBWZXJzaW9uIDAuNy4xIC0gMDQuMDQuMjAxODpcclxuICogICAgICAgICAgICAgICAgICAtIEFkZCBtYXgtd2lkdGg6IG5vbmUgdG8gZW5zdXJlIHRoZSBpbWFnZSBpcyBwcm9wZXJseSBzaG93blxyXG4gKiAgICAgICAgICAgICAgICBWZXJzaW9uIDAuNyAtIDEzLjExLjIwMTc6XHJcbiAqICAgICAgICAgICAgICAgICAgLSBiZXR0ZXIgSmF2YXNjcmlwdCBzdHJ1Y3R1cmVcclxuICogICAgICAgICAgICAgICAgICAtIEdpdEh1YiB2ZXJzaW9uIChodHRwczovL2dpdGh1Yi5jb20vQWRyaWFub3RpZ2VyL3dlYi1lc2hlZXApXHJcbiAqICAgICAgICAgICAgICAgICAgLSBDaGlsZHMgYW5pbWF0aW9ucyBhZGRlZFxyXG4gKiAgICAgICAgICAgICAgICAgIC0gQmV0dGVyIGNvbW1lbnRzXHJcbiAqICAgICAgICAgICAgICAgICAgLSBSZXBsYWNlZCBhbGVydHMgd2l0aCBjb25zb2xlLmVycm9yXHJcbiAqICAgICAgICAgICAgICAgIFZlcnNpb24gMC41IC0gMTIuMDcuMjAxNzpcclxuICogICAgICAgICAgICAgICAgICAtIGFuaW1hdGlvbnMgc3RhcnRzIG9ubHkgb25jZSB0aGUgaW1hZ2Ugd2FzIGxvYWRlZCAodGhhbmtzIFJlZFNwYXJyMHcpXHJcbiAqICAgICAgICAgICAgICAgIFZlcnNpb24gMC54OlxyXG4gKiAgICAgICAgICAgICAgICAgIC0gc3RpbGwgYmV0YSB2ZXJzaW9ucy4uLlxyXG4gKi9cblxudmFyIFZFUlNJT04gPSAnMC43LjEnOyAvLyB3ZWIgZVNoZWVwIHZlcnNpb25cbnZhciBBQ1RJVkFURV9ERUJVRyA9IGZhbHNlOyAvLyBzaG93IGxvZyBvbiBjb25zb2xlXG52YXIgREVGQVVMVF9YTUwgPSBcImh0dHA6Ly9lc2hlZXAucGV0cnVjY2kuY2gvc2NyaXB0L2FuaW1hdGlvbi5waHBcIjsgLy8gZGVmYXVsdCBYTUwgYW5pbWF0aW9uXG52YXIgQ09MTElTSU9OX1dJVEggPSBbXCJkaXZcIiwgXCJoclwiXTsgLy8gZWxlbWVudHMgb24gcGFnZSB0byBkZXRlY3QgZm9yIGNvbGxpc2lvbnNcblxuLypcclxuICogZVNoZWVwIGNsYXNzLlxyXG4gKiBDcmVhdGUgYSBuZXcgY2xhc3Mgb2YgdGhpcyB0eXBlIGlmIHlvdSB3YW50IGEgbmV3IHBldC4gV2lsbCBjcmVhdGUgdGhlIGNvbXBvbmVudHMgZm9yIHRoZSBwZXQuXHJcbiAqIE9uY2UgY3JlYXRlZCwgeW91IGNhbiBjYWxsIFt2YXJpYWJsZU5hbWVdLlN0YXJ0KCkgdG8gc3RhcnQgdGhlIGFuaW1hdGlvbiB3aXRoIHlvdXIgZGVzaXJlZCBwZXQuXHJcbiAqL1xuXG52YXIgZVNoZWVwID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBlU2hlZXAoaXNDaGlsZCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBlU2hlZXApO1xuXG4gICAgLy8gQ09SUzogQ3Jvc3MgY2FsbHMgYXJlIG5vdCBhY2NlcHRlZCBieSBuZXcgYnJvd3NlcnMuXG4gICAgLy8gVGhpcyBQSFAtc2NyaXB0IGFsbG93cyB0byBjYWxsIHRoZSBwYWdlIGFsc28gZnJvbSBvdGhlciBkb21haW5zXG4gICAgdGhpcy5hbmltYXRpb25GaWxlID0gREVGQVVMVF9YTUw7XG5cbiAgICB0aGlzLmlkID0gRGF0ZS5ub3coKSArIE1hdGgucmFuZG9tKCk7XG5cbiAgICB0aGlzLkRPTWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7IC8vIERpdiBhZGRlZCB0byB3ZWJwYWdlLCBjb250YWluaW5nIHRoZSBzaGVlcFxuICAgIHRoaXMuRE9NZGl2LnNldEF0dHJpYnV0ZShcImlkXCIsIHRoaXMuaWQpO1xuICAgIHRoaXMuRE9NaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTsgLy8gVGlsZSBpbWFnZSwgd2lsbCBiZSBwb3NpdGlvbmVkIGluc2lkZSB0aGUgZGl2XG4gICAgdGhpcy5ET01pbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTsgLy8gYWJvdXQgZGlhbG9nLCBpZiB5b3UgcHJlc3Mgb24gdGhlIHNoZWVwXG5cbiAgICB0aGlzLnBhcnNlciA9IG5ldyBET01QYXJzZXIoKTsgLy8gWE1MIHBhcnNlclxuICAgIHRoaXMueG1sRG9jID0gbnVsbDsgLy8gcGFyc2VkIFhNTCBEb2N1bWVudFxuXG4gICAgdGhpcy5pc0NoaWxkID0gaXNDaGlsZCAhPSBudWxsOyAvLyBDaGlsZCB3aWxsIGJlIHJlbW92ZWQgb25jZSB0aGV5IHJlYWNoZWQgdGhlIGVuZFxuXG4gICAgdGhpcy50aWxlc1ggPSAxOyAvLyBRdWFudGl0eSBvZiBpbWFnZXMgaW5zaWRlIFRpbGVcbiAgICB0aGlzLnRpbGVzWSA9IDE7IC8vIFF1YW50aXR5IG9mIGltYWdlcyBpbnNpZGUgVGlsZVxuICAgIHRoaXMuaW1hZ2VXID0gMTsgLy8gV2lkdGggb2YgdGhlIHNwcml0ZSBpbWFnZVxuICAgIHRoaXMuaW1hZ2VIID0gMTsgLy8gSGVpZ2h0IG9mIHRoZSBzcHJpdGUgaW1hZ2VcbiAgICB0aGlzLmltYWdlWCA9IDE7IC8vIFBvc2l0aW9uIG9mIHNwcml0ZSBpbnNpZGUgd2VicGFnZVxuICAgIHRoaXMuaW1hZ2VZID0gMTsgLy8gUG9zaXRpb24gb2Ygc3ByaXRlIGluc2lkZSB3ZWJwYWdlXG4gICAgdGhpcy5mbGlwcGVkID0gZmFsc2U7IC8vIGlmIHNwcml0ZSBpcyBmbGlwcGVkXG4gICAgdGhpcy5kcmFnZ2luZyA9IGZhbHNlOyAvLyBpZiB1c2VyIGlzIGRyYWdnaW5nIHRoZSBzaGVlcFxuICAgIHRoaXMuaW5mb2JveCA9IGZhbHNlOyAvLyBpZiBpbmZvYm94IGlzIHZpc2libGVcbiAgICB0aGlzLmFuaW1hdGlvbklkID0gMDsgLy8gY3VycmVudCBhbmltYXRpb24gSURcbiAgICB0aGlzLmFuaW1hdGlvblN0ZXAgPSAwOyAvLyBjdXJyZW50IGFuaW1hdGlvbiBzdGVwXG4gICAgdGhpcy5hbmltYXRpb25Ob2RlID0gbnVsbDsgLy8gY3VycmVudCBhbmltYXRpb24gRE9NIG5vZGVcbiAgICB0aGlzLnNwcml0ZSA9IG5ldyBJbWFnZSgpOyAvLyBzcHJpdGUgaW1hZ2UgKFRpbGVzKVxuICAgIHRoaXMuSFRNTGVsZW1lbnQgPSBudWxsOyAvLyB0aGUgSFRNTCBlbGVtZW50IHdoZXJlIHRoZSBwZXQgaXMgd2Fsa2luZyBvblxuICAgIHRoaXMucmFuZFMgPSBNYXRoLnJhbmRvbSgpICogMTAwOyAvLyByYW5kb20gdmFsdWUsIHdpbGwgY2hhbmdlIHdoZW4gcGFnZSBpcyByZWxvYWRlZFxuXG4gICAgdGhpcy5zY3JlZW5XID0gd2luZG93LmlubmVyV2lkdGggfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoIHx8IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGg7IC8vIHdpbmRvdyB3aWR0aFxuXG4gICAgdGhpcy5zY3JlZW5IID0gd2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgfHwgZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7IC8vIHdpbmRvdyBoZWlnaHRcbiAgfVxuXG4gIC8qXHJcbiAgICogU3RhcnQgbmV3IGFuaW1hdGlvbiBvbiB0aGUgcGFnZS5cclxuICAgKiBpZiBhbmltYXRpb24gaXMgbm90IHNldCwgdGhlIGRlZmF1bHQgc2hlZXAgd2lsbCBiZSB0YWtlblxyXG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKGVTaGVlcCwgW3tcbiAgICBrZXk6IFwiU3RhcnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gU3RhcnQoYW5pbWF0aW9uKSB7XG4gICAgICBpZiAodHlwZW9mIGFuaW1hdGlvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgYW5pbWF0aW9uICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5hbmltYXRpb25GaWxlID0gYW5pbWF0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgYWpheCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgdmFyIHNoZWVwQ2xhc3MgPSB0aGlzO1xuXG4gICAgICBhamF4Lm9wZW4oXCJHRVRcIiwgdGhpcy5hbmltYXRpb25GaWxlLCB0cnVlKTtcbiAgICAgIGFqYXguYWRkRXZlbnRMaXN0ZW5lcihcInJlYWR5c3RhdGVjaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09IDQpIHtcbiAgICAgICAgICBpZiAodGhpcy5zdGF0dXMgPT0gMjAwKVxuICAgICAgICAgICAgLy8gc3VjY2Vzc2Z1bGx5IGxvYWRlZCBYTUwsIHBhcnNlIGl0IGFuZCBjcmVhdGUgZmlyc3QgZXNoZWVwLlxuICAgICAgICAgICAgc2hlZXBDbGFzcy5fcGFyc2VYTUwodGhpcy5yZXNwb25zZVRleHQpO2Vsc2UgY29uc29sZS5lcnJvcihcIlhNTCBub3QgYXZhaWxhYmxlOlwiICsgdGhpcy5zdGF0dXNUZXh0ICsgXCJcXG5cIiArIHRoaXMucmVzcG9uc2VUZXh0KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBhamF4LnNlbmQobnVsbCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICB0aGlzLkRPTWRpdiA9IHRoaXMuRE9NaW1nID0gdGhpcy5ET01pbmZvID0gbnVsbDtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuaWQpLm91dGVySFRNTCA9ICcnO1xuICAgIH1cblxuICAgIC8qXHJcbiAgICAgKiBQYXJzZSBsb2FkZWQgWE1MLCBjb250YWlucyBzcGF3biwgYW5pbWF0aW9ucyBhbmQgY2hpbGRzXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9wYXJzZVhNTFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfcGFyc2VYTUwodGV4dCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdGhpcy54bWxEb2MgPSB0aGlzLnBhcnNlci5wYXJzZUZyb21TdHJpbmcodGV4dCwgJ3RleHQveG1sJyk7XG4gICAgICB2YXIgaW1hZ2UgPSB0aGlzLnhtbERvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW1hZ2UnKVswXTtcbiAgICAgIHRoaXMudGlsZXNYID0gaW1hZ2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ0aWxlc3hcIilbMF0udGV4dENvbnRlbnQ7XG4gICAgICB0aGlzLnRpbGVzWSA9IGltYWdlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidGlsZXN5XCIpWzBdLnRleHRDb250ZW50O1xuICAgICAgLy8gRXZlbnQgbGlzdGVuZXI6IFNwcml0ZSB3YXMgbG9hZGVkID0+XG4gICAgICAvLyAgIHBsYXkgYW5pbWF0aW9uIG9ubHkgd2hlbiB0aGUgc3ByaXRlIGlzIGxvYWRlZFxuICAgICAgdGhpcy5zcHJpdGUuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoQUNUSVZBVEVfREVCVUcpIGNvbnNvbGUubG9nKFwiU3ByaXRlIGltYWdlIGxvYWRlZFwiKTtcbiAgICAgICAgdmFyIGF0dHJpYnV0ZSA9IFwid2lkdGg6XCIgKyBfdGhpcy5zcHJpdGUud2lkdGggKyBcInB4O1wiICsgXCJoZWlnaHQ6XCIgKyBfdGhpcy5zcHJpdGUuaGVpZ2h0ICsgXCJweDtcIiArIFwicG9zaXRpb246YWJzb2x1dGU7XCIgKyBcInRvcDowcHg7XCIgKyBcImxlZnQ6MHB4O1wiICsgXCJtYXgtd2lkdGg6IG5vbmU7XCI7XG4gICAgICAgIF90aGlzLkRPTWltZy5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBhdHRyaWJ1dGUpO1xuICAgICAgICAvLyBwcmV2ZW50IHRvIG1vdmUgaW1hZ2UgKHdpbGwgc2hvdyB0aGUgZW50aXJlIHNwcml0ZSBzaGVldCBpZiBub3QgY2F0Y2hlZClcbiAgICAgICAgX3RoaXMuRE9NaW1nLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnc3RhcnRcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgICAgICAgX3RoaXMuaW1hZ2VXID0gX3RoaXMuc3ByaXRlLndpZHRoIC8gX3RoaXMudGlsZXNYO1xuICAgICAgICBfdGhpcy5pbWFnZUggPSBfdGhpcy5zcHJpdGUuaGVpZ2h0IC8gX3RoaXMudGlsZXNZO1xuICAgICAgICAvL2lmKHR5cGVvZiB0aGlzLmltYWdlWCA9PSAndW5kZWZpbmVkJykgdGhpcy5pbWFnZVggPSAwO1xuICAgICAgICAvL2lmKHR5cGVvZiB0aGlzLmltYWdlWSA9PSAndW5kZWZpbmVkJykgdGhpcy5pbWFnZVkgPSB0aGlzLnNjcmVlbkggLSB0aGlzLnNwcml0ZS5oZWlnaHQgLyB0aGlzLnRpbGVzWTtcbiAgICAgICAgYXR0cmlidXRlID0gXCJ3aWR0aDpcIiArIF90aGlzLmltYWdlVyArIFwicHg7XCIgKyBcImhlaWdodDpcIiArIF90aGlzLmltYWdlSCArIFwicHg7XCIgKyBcInBvc2l0aW9uOmZpeGVkO1wiICsgXCJ0b3A6XCIgKyBfdGhpcy5pbWFnZVkgKyBcInB4O1wiICsgXCJsZWZ0OlwiICsgX3RoaXMuaW1hZ2VYICsgXCJweDtcIiArIFwidHJhbnNmb3JtOnJvdGF0ZXkoMGRlZyk7XCIgKyBcImN1cnNvcjptb3ZlO1wiICsgXCJ6LWluZGV4OjIwMDA7XCIgKyBcIm92ZXJmbG93OmhpZGRlbjtcIjtcbiAgICAgICAgX3RoaXMuRE9NZGl2LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIGF0dHJpYnV0ZSk7XG4gICAgICAgIF90aGlzLkRPTWRpdi5hcHBlbmRDaGlsZChfdGhpcy5ET01pbWcpO1xuXG4gICAgICAgIGlmIChfdGhpcy5pc0NoaWxkKSBfdGhpcy5fc3Bhd25DaGlsZCgpO2Vsc2UgX3RoaXMuX3NwYXduRVNoZWVwKCk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5zcHJpdGUuc3JjID0gJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCwnICsgaW1hZ2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJwbmdcIilbMF0udGV4dENvbnRlbnQ7XG4gICAgICB0aGlzLkRPTWltZy5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgdGhpcy5zcHJpdGUuc3JjKTtcblxuICAgICAgLy8gTW91c2UgbW92ZSBvdmVyIGVTaGVlcCwgY2hlY2sgaWYgZVNoZWVwIHNob3VsZCBiZSBtb3ZlZCBvdmVyIHRoZSBzY3JlZW5cbiAgICAgIHRoaXMuRE9NZGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKCFfdGhpcy5kcmFnZ2luZyAmJiBlLmJ1dHRvbnMgPT0gMSAmJiBlLmJ1dHRvbiA9PSAwKSB7XG4gICAgICAgICAgX3RoaXMuZHJhZ2dpbmcgPSB0cnVlO1xuICAgICAgICAgIF90aGlzLkhUTUxlbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICB2YXIgY2hpbGRzUm9vdCA9IF90aGlzLnhtbERvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYW5pbWF0aW9ucycpWzBdO1xuICAgICAgICAgIHZhciBjaGlsZHMgPSBjaGlsZHNSb290LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdhbmltYXRpb24nKTtcbiAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IGNoaWxkcy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgaWYgKGNoaWxkc1trXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbmFtZScpWzBdLnRleHRDb250ZW50ID09IFwiZHJhZ1wiKSB7XG4gICAgICAgICAgICAgIF90aGlzLmFuaW1hdGlvbklkID0gY2hpbGRzW2tdLmdldEF0dHJpYnV0ZShcImlkXCIpO1xuICAgICAgICAgICAgICBfdGhpcy5hbmltYXRpb25TdGVwID0gMDtcbiAgICAgICAgICAgICAgX3RoaXMuYW5pbWF0aW9uTm9kZSA9IGNoaWxkc1trXTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEFkZCBldmVudCBsaXN0ZW5lciB0byBib2R5LCBpZiBtb3VzZSBtb3ZlZCB0b28gZmFzdCBvdmVyIHRoZSBkcmFnZ2luZyBlU2hlZXBcbiAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoX3RoaXMuZHJhZ2dpbmcpIHtcbiAgICAgICAgICBfdGhpcy5pbWFnZVggPSBwYXJzZUludChlLmNsaWVudFgpIC0gX3RoaXMuaW1hZ2VXIC8gMjtcbiAgICAgICAgICBfdGhpcy5pbWFnZVkgPSBwYXJzZUludChlLmNsaWVudFkpIC0gX3RoaXMuaW1hZ2VIIC8gMjtcblxuICAgICAgICAgIF90aGlzLkRPTWRpdi5zdHlsZS5sZWZ0ID0gX3RoaXMuaW1hZ2VYICsgXCJweFwiO1xuICAgICAgICAgIF90aGlzLkRPTWRpdi5zdHlsZS50b3AgPSBfdGhpcy5pbWFnZVkgKyBcInB4XCI7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgLy8gV2luZG93IHJlc2l6ZWQsIHJlY2FsY3VsYXRlIGVTaGVlcCBib3VuZHNcbiAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLnNjcmVlblcgPSB3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggfHwgZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDtcblxuICAgICAgICBfdGhpcy5zY3JlZW5IID0gd2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgfHwgZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7XG5cbiAgICAgICAgaWYgKF90aGlzLmltYWdlWSArIF90aGlzLmltYWdlSCA+IF90aGlzLnNjcmVlbkgpIHtcbiAgICAgICAgICBfdGhpcy5pbWFnZVkgPSBfdGhpcy5zY3JlZW5IIC0gX3RoaXMuaW1hZ2VIO1xuICAgICAgICAgIF90aGlzLkRPTWRpdi5zdHlsZS50b3AgPSBfdGhpcy5pbWFnZVkgKyBcInB4XCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF90aGlzLmltYWdlWCArIF90aGlzLmltYWdlVyA+IF90aGlzLnNjcmVlblcpIHtcbiAgICAgICAgICBfdGhpcy5pbWFnZVggPSBfdGhpcy5zY3JlZW5XIC0gX3RoaXMuaW1hZ2VXO1xuICAgICAgICAgIF90aGlzLkRPTWRpdi5zdHlsZS5sZWZ0ID0gX3RoaXMuaW1hZ2VYICsgXCJweFwiO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIERvbid0IGFsbG93IGNvbnRleHRtZW51IG92ZXIgdGhlIHNoZWVwXG4gICAgICB0aGlzLkRPTWRpdi5hZGRFdmVudExpc3RlbmVyKFwiY29udGV4dG1lbnVcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9KTtcbiAgICAgIC8vIE1vdXNlIHJlbGVhc2VkXG4gICAgICB0aGlzLkRPTWRpdi5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfdGhpcy5kcmFnZ2luZykge1xuICAgICAgICAgIF90aGlzLmRyYWdnaW5nID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSBpZiAoX3RoaXMuaW5mb2JveCkge1xuICAgICAgICAgIF90aGlzLkRPTWluZm8uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgIF90aGlzLmluZm9ib3ggPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5ET01pbmZvLnN0eWxlLmxlZnQgPSBNYXRoLm1pbihfdGhpcy5zY3JlZW5XIC0gMjAwLCBNYXRoLm1heCgwLCBwYXJzZUludChfdGhpcy5pbWFnZVggKyBfdGhpcy5pbWFnZVcgLyAyIC0gcGFyc2VJbnQoX3RoaXMuRE9NaW5mby5zdHlsZS53aWR0aCkgLyAyKSkpICsgXCJweFwiO1xuICAgICAgICAgIF90aGlzLkRPTWluZm8uc3R5bGUudG9wID0gcGFyc2VJbnQoX3RoaXMuaW1hZ2VZIC0gcGFyc2VJbnQoX3RoaXMuRE9NaW5mby5zdHlsZS5oZWlnaHQpKSArIFwicHhcIjtcbiAgICAgICAgICBfdGhpcy5ET01pbmZvLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgX3RoaXMuaW5mb2JveCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgLy8gTW91c2UgcmVsZWFzZWQgb3ZlciB0aGUgaW5mbyBib3hcbiAgICAgIHRoaXMuRE9NaW5mby5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBfdGhpcy5ET01pbmZvLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgX3RoaXMuaW5mb2JveCA9IGZhbHNlO1xuICAgICAgfSk7XG4gICAgICAvLyBDcmVhdGUgQWJvdXQgYm94XG4gICAgICB2YXIgYXR0cmlidXRlID0gXCJ3aWR0aDoyMDBweDtcIiArIFwiaGVpZ2h0OjEwMHB4O1wiICsgXCJwb3NpdGlvbjpmaXhlZDtcIiArIFwidG9wOjEwMHB4O2xlZnQ6MTBweDtcIiArIFwiZGlzcGxheTpub25lO1wiICsgXCJib3JkZXItd2lkdGg6MnB4O1wiICsgXCJib3JkZXItcmFkaXVzOjVweDtcIiArIFwiYm9yZGVyLXN0eWxlOnJpZGdlO1wiICsgXCJib3JkZXItY29sb3I6IzAwMDBhYjtcIiArIFwidGV4dC1hbGlnbjpjZW50ZXI7XCIgKyBcInRleHQtc2hhZG93OiAxcHggMXB4IDNweCAjZmZmZjg4O1wiICsgXCJib3gtc2hhZG93OiAzcHggM3B4IDEwcHggIzg4ODg4ODtcIiArIFwiY29sb3I6YmxhY2s7XCIgKyBcIm9wYWNpdHk6MC45O1wiICsgXCJ6LWluZGV4Ojk5OTk7XCIgKyBcIm92ZXJmbG93OmF1dG87XCIgKyBcImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20gcmlnaHQsIHJnYmEoMTI4LDEyOCwyNTUsMC43KSwgcmdiYSgyMDAsMjAwLDI1NSwwLjQpKTtcIjtcbiAgICAgIHRoaXMuRE9NaW5mby5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBhdHRyaWJ1dGUpO1xuICAgICAgdmFyIGh0bWxUID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJcIikuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJlU2hlZXBcIikpO1xuICAgICAgdmFyIGh0bWxWID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN1cFwiKTtcbiAgICAgIHZhciBodG1sTCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgICAgaHRtbFYuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJ2ZXI6IFwiICsgVkVSU0lPTikpO1xuICAgICAgaHRtbFYuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgXCJmbG9hdDpyaWdodFwiKTtcbiAgICAgIGh0bWxMLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiaHR0cDovL2VzaGVlcC5wZXRydWNjaS5jaFwiKSk7XG4gICAgICBodG1sTC5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsIFwiaHR0cDovL2VzaGVlcC5wZXRydWNjaS5jaFwiKTtcbiAgICAgIGh0bWxMLnNldEF0dHJpYnV0ZShcInRhcmdldFwiLCBcIl9ibGFua1wiKTtcbiAgICAgIHRoaXMuRE9NaW5mby5hcHBlbmRDaGlsZChodG1sVCk7XG4gICAgICB0aGlzLkRPTWluZm8uYXBwZW5kQ2hpbGQoaHRtbFYpO1xuICAgICAgdGhpcy5ET01pbmZvLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG4gICAgICB0aGlzLkRPTWluZm8uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImhyXCIpKTtcbiAgICAgIHRoaXMuRE9NaW5mby5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlZpc2l0IHRoZSBob21lIHBhZ2Ugb2YgdGhpcyBsb3ZlbHkgc2hlZXA6XCIpKTtcbiAgICAgIHRoaXMuRE9NaW5mby5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO1xuICAgICAgdGhpcy5ET01pbmZvLmFwcGVuZENoaWxkKGh0bWxMKTtcbiAgICAgIC8vIEFkZCBhYm91dCBhbmQgc2hlZXAgZWxlbWVudHMgdG8gdGhlIGJvZHlcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5ET01pbmZvKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5ET01kaXYpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfc2V0UG9zaXRpb25cIixcblxuXG4gICAgLypcclxuICAgICAqIFNldCBuZXcgcG9zaXRpb24gZm9yIHRoZSBwZXRcclxuICAgICAqIElmIGFic29sdXRlIGlzIHRydWUsIHRoZSB4IGFuZCB5IGNvb3JkaW5hdGVzIGFyZSB1c2VkIGFzIGFic29sdXRlIHZhbHVlcy5cclxuICAgICAqIElmIGZhbHNlLCB4IGFuZCB5IGFyZSBhZGRlZCB0byB0aGUgY3VycmVudCBwb3NpdGlvblxyXG4gICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9zZXRQb3NpdGlvbih4LCB5LCBhYnNvbHV0ZSkge1xuICAgICAgaWYgKHRoaXMuRE9NZGl2KSB7XG4gICAgICAgIGlmIChhYnNvbHV0ZSkge1xuICAgICAgICAgIHRoaXMuaW1hZ2VYID0gcGFyc2VJbnQoeCk7XG4gICAgICAgICAgdGhpcy5pbWFnZVkgPSBwYXJzZUludCh5KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmltYWdlWCA9IHBhcnNlSW50KHRoaXMuaW1hZ2VYKSArIHBhcnNlSW50KHgpO1xuICAgICAgICAgIHRoaXMuaW1hZ2VZID0gcGFyc2VJbnQodGhpcy5pbWFnZVkpICsgcGFyc2VJbnQoeSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5ET01kaXYuc3R5bGUubGVmdCA9IHRoaXMuaW1hZ2VYICsgXCJweFwiO1xuICAgICAgICB0aGlzLkRPTWRpdi5zdHlsZS50b3AgPSB0aGlzLmltYWdlWSArIFwicHhcIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKlxyXG4gICAgICogU3Bhd24gbmV3IGVzaGVlcCwgdGhpcyBpcyBjYWxsZWQgaWYgdGhlIFhNTCB3YXMgbG9hZGVkIHN1Y2Nlc3NmdWxseVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJfc3Bhd25FU2hlZXBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3NwYXduRVNoZWVwKCkge1xuICAgICAgdmFyIHNwYXduc1Jvb3QgPSB0aGlzLnhtbERvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc3Bhd25zJylbMF07XG4gICAgICB2YXIgc3Bhd25zID0gc3Bhd25zUm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc3Bhd24nKTtcbiAgICAgIHZhciBwcm9iID0gMDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3Bhd25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHByb2IgKz0gcGFyc2VJbnQoc3Bhd25zWzBdLmdldEF0dHJpYnV0ZShcInByb2JhYmlsaXR5XCIpKTtcbiAgICAgIH12YXIgcmFuZCA9IE1hdGgucmFuZG9tKCkgKiBwcm9iO1xuICAgICAgcHJvYiA9IDA7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgc3Bhd25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHByb2IgKz0gcGFyc2VJbnQoc3Bhd25zW2ldLmdldEF0dHJpYnV0ZShcInByb2JhYmlsaXR5XCIpKTtcbiAgICAgICAgaWYgKHByb2IgPj0gcmFuZCB8fCBpID09IHNwYXducy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgdGhpcy5fc2V0UG9zaXRpb24odGhpcy5fcGFyc2VLZXlXb3JkcyhzcGF3bnNbaV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3gnKVswXS50ZXh0Q29udGVudCksIHRoaXMuX3BhcnNlS2V5V29yZHMoc3Bhd25zW2ldLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd5JylbMF0udGV4dENvbnRlbnQpLCB0cnVlKTtcbiAgICAgICAgICBpZiAoQUNUSVZBVEVfREVCVUcpIGNvbnNvbGUubG9nKFwiU3Bhd246IFwiICsgdGhpcy5pbWFnZVggKyBcIiwgXCIgKyB0aGlzLmltYWdlWSk7XG4gICAgICAgICAgdGhpcy5hbmltYXRpb25JZCA9IHNwYXduc1tpXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbmV4dCcpWzBdLnRleHRDb250ZW50O1xuICAgICAgICAgIHRoaXMuYW5pbWF0aW9uU3RlcCA9IDA7XG4gICAgICAgICAgdmFyIGNoaWxkc1Jvb3QgPSB0aGlzLnhtbERvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYW5pbWF0aW9ucycpWzBdO1xuICAgICAgICAgIHZhciBjaGlsZHMgPSBjaGlsZHNSb290LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdhbmltYXRpb24nKTtcbiAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IGNoaWxkcy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgaWYgKGNoaWxkc1trXS5nZXRBdHRyaWJ1dGUoXCJpZFwiKSA9PSB0aGlzLmFuaW1hdGlvbklkKSB7XG4gICAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uTm9kZSA9IGNoaWxkc1trXTtcblxuICAgICAgICAgICAgICAvLyBDaGVjayBpZiBjaGlsZCBzaG91bGQgYmUgbG9hZGVkIHRvZ2hldGhlciB3aXRoIHRoaXMgYW5pbWF0aW9uXG4gICAgICAgICAgICAgIHZhciBjaGlsZHNSb290ID0gdGhpcy54bWxEb2MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2NoaWxkcycpWzBdO1xuICAgICAgICAgICAgICB2YXIgY2hpbGRzID0gY2hpbGRzUm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnY2hpbGQnKTtcbiAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBjaGlsZHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGRzW2pdLmdldEF0dHJpYnV0ZShcImFuaW1hdGlvbmlkXCIpID09IHRoaXMuYW5pbWF0aW9uSWQpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChBQ1RJVkFURV9ERUJVRykgY29uc29sZS5sb2coXCJDaGlsZCBmcm9tIFNwYXduXCIpO1xuICAgICAgICAgICAgICAgICAgdmFyIGVTaGVlcENoaWxkID0gbmV3IGVTaGVlcCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgIGVTaGVlcENoaWxkLmFuaW1hdGlvbklkID0gY2hpbGRzW2pdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCduZXh0JylbMF0udGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgICB2YXIgeCA9IGNoaWxkc1tqXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgneCcpWzBdLnRleHRDb250ZW50OyAvL1xuICAgICAgICAgICAgICAgICAgdmFyIHkgPSBjaGlsZHNbal0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3knKVswXS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgIGVTaGVlcENoaWxkLl9zZXRQb3NpdGlvbih0aGlzLl9wYXJzZUtleVdvcmRzKHgpLCB0aGlzLl9wYXJzZUtleVdvcmRzKHkpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgIC8vIFN0YXJ0IGFuaW1hdGlvblxuICAgICAgICAgICAgICAgICAgZVNoZWVwQ2hpbGQuU3RhcnQodGhpcy5hbmltYXRpb25GaWxlKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIFBsYXkgbmV4dCBzdGVwXG4gICAgICB0aGlzLl9uZXh0RVNoZWVwU3RlcCgpO1xuICAgIH1cblxuICAgIC8qXHJcbiAgICAgKiBMaWtlIHNwYXduRVNoZWVwLCBidXQgZm9yIENoaWxkc1xyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJfc3Bhd25DaGlsZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfc3Bhd25DaGlsZCgpIHtcbiAgICAgIHZhciBjaGlsZHNSb290ID0gdGhpcy54bWxEb2MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2FuaW1hdGlvbnMnKVswXTtcbiAgICAgIHZhciBjaGlsZHMgPSBjaGlsZHNSb290LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdhbmltYXRpb24nKTtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgY2hpbGRzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIGlmIChjaGlsZHNba10uZ2V0QXR0cmlidXRlKFwiaWRcIikgPT0gdGhpcy5hbmltYXRpb25JZCkge1xuICAgICAgICAgIHRoaXMuYW5pbWF0aW9uTm9kZSA9IGNoaWxkc1trXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy5fbmV4dEVTaGVlcFN0ZXAoKTtcbiAgICB9XG5cbiAgICAvLyBQYXJzZSB0aGUgaHVtYW4gcmVhZGFibGUgZXhwcmVzc2lvbiBmcm9tIFhNTCB0byBhIGNvbXB1dGVyIHJlYWRhYmxlIGV4cHJlc3Npb25cblxuICB9LCB7XG4gICAga2V5OiBcIl9wYXJzZUtleVdvcmRzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9wYXJzZUtleVdvcmRzKHZhbHVlKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL3NjcmVlblcvZywgdGhpcy5zY3JlZW5XKTtcbiAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvc2NyZWVuSC9nLCB0aGlzLnNjcmVlbkgpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9hcmVhVy9nLCB0aGlzLnNjcmVlbkgpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9hcmVhSC9nLCB0aGlzLnNjcmVlbkgpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9pbWFnZVcvZywgdGhpcy5pbWFnZVcpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9pbWFnZUgvZywgdGhpcy5pbWFnZUgpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9yYW5kb20vZywgTWF0aC5yYW5kb20oKSAqIDEwMCk7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL3JhbmRTL2csIHRoaXMucmFuZFMpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9pbWFnZVgvZywgdGhpcy5pbWFnZVgpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9pbWFnZVkvZywgdGhpcy5pbWFnZVkpO1xuXG4gICAgICB2YXIgcmV0ID0gMDtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldCA9IGV2YWwodmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmFibGUgdG8gcGFyc2UgdGhpcyBwb3NpdGlvbjogXFxuJ1wiICsgdmFsdWUgKyBcIidcXG4gRXJyb3IgbWVzc2FnZTogXFxuXCIgKyBlcnIubWVzc2FnZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIC8qXHJcbiAgICAgKiBPbmNlIHRoZSBhbmltYXRpb24gaXMgb3ZlciwgZ2V0IHRoZSBuZXh0IGFuaW1hdGlvbiB0byBwbGF5XHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9nZXROZXh0UmFuZG9tTm9kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0TmV4dFJhbmRvbU5vZGUocGFyZW50Tm9kZSkge1xuICAgICAgdmFyIGJhc2VOb2RlID0gcGFyZW50Tm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbmV4dCcpO1xuICAgICAgdmFyIGNoaWxkc1Jvb3QgPSB0aGlzLnhtbERvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYW5pbWF0aW9ucycpWzBdO1xuICAgICAgdmFyIGNoaWxkcyA9IGNoaWxkc1Jvb3QuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2FuaW1hdGlvbicpO1xuICAgICAgdmFyIHByb2IgPSAwO1xuICAgICAgdmFyIG5vZGVGb3VuZCA9IGZhbHNlO1xuXG4gICAgICAvLyBubyBtb3JlIGFuaW1hdGlvbnMgKGl0IHdhcyB0aGUgbGFzdCBvbmUpXG4gICAgICBpZiAoYmFzZU5vZGUubGVuZ3RoID09IDApIHtcbiAgICAgICAgLy8gSWYgaXQgaXMgYSBjaGlsZCwgcmVtb3ZlIHRoZSBjaGlsZCBmcm9tIGRvY3VtZW50XG4gICAgICAgIGlmICh0aGlzLmlzQ2hpbGQpIHtcbiAgICAgICAgICAvLyByZW1vdmUgY2hpbGRcbiAgICAgICAgICBpZiAoQUNUSVZBVEVfREVCVUcpIGNvbnNvbGUubG9nKFwiUmVtb3ZlIGNoaWxkXCIpO1xuICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGhpcy5ET01pbmZvKTtcbiAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuRE9NZGl2KTtcbiAgICAgICAgICBkZWxldGUgdGhpcztcbiAgICAgICAgfVxuICAgICAgICAvLyBlbHNlLCBzcGF3biBzaGVlcCBhZ2FpblxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3NwYXduRVNoZWVwKCk7XG4gICAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgYmFzZU5vZGUubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgcHJvYiArPSBwYXJzZUludChiYXNlTm9kZVtrXS5nZXRBdHRyaWJ1dGUoXCJwcm9iYWJpbGl0eVwiKSk7XG4gICAgICB9XG4gICAgICB2YXIgcmFuZCA9IE1hdGgucmFuZG9tKCkgKiBwcm9iO1xuICAgICAgdmFyIGluZGV4ID0gMDtcbiAgICAgIHByb2IgPSAwO1xuICAgICAgZm9yIChrID0gMDsgayA8IGJhc2VOb2RlLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHByb2IgKz0gcGFyc2VJbnQoYmFzZU5vZGVba10uZ2V0QXR0cmlidXRlKFwicHJvYmFiaWxpdHlcIikpO1xuICAgICAgICBpZiAocHJvYiA+PSByYW5kKSB7XG4gICAgICAgICAgaW5kZXggPSBrO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmb3IgKGsgPSAwOyBrIDwgY2hpbGRzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIGlmIChjaGlsZHNba10uZ2V0QXR0cmlidXRlKFwiaWRcIikgPT0gYmFzZU5vZGVbaW5kZXhdLnRleHRDb250ZW50KSB7XG4gICAgICAgICAgdGhpcy5hbmltYXRpb25JZCA9IGNoaWxkc1trXS5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtcbiAgICAgICAgICB0aGlzLmFuaW1hdGlvblN0ZXAgPSAwO1xuICAgICAgICAgIHRoaXMuYW5pbWF0aW9uTm9kZSA9IGNoaWxkc1trXTtcbiAgICAgICAgICBub2RlRm91bmQgPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChub2RlRm91bmQpIC8vIGNyZWF0ZSBDaGlsZCwgaWYgcHJlc2VudFxuICAgICAgICB7XG4gICAgICAgICAgdmFyIGNoaWxkc1Jvb3QgPSB0aGlzLnhtbERvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnY2hpbGRzJylbMF07XG4gICAgICAgICAgdmFyIGNoaWxkcyA9IGNoaWxkc1Jvb3QuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2NoaWxkJyk7XG4gICAgICAgICAgZm9yIChrID0gMDsgayA8IGNoaWxkcy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgaWYgKGNoaWxkc1trXS5nZXRBdHRyaWJ1dGUoXCJhbmltYXRpb25pZFwiKSA9PSB0aGlzLmFuaW1hdGlvbklkKSB7XG4gICAgICAgICAgICAgIGlmIChBQ1RJVkFURV9ERUJVRykgY29uc29sZS5sb2coXCJDaGlsZCBmcm9tIEFuaW1hdGlvblwiKTtcbiAgICAgICAgICAgICAgdmFyIGVTaGVlcENoaWxkID0gbmV3IGVTaGVlcCh0cnVlKTtcbiAgICAgICAgICAgICAgZVNoZWVwQ2hpbGQuYW5pbWF0aW9uSWQgPSBjaGlsZHNba10uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ25leHQnKVswXS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgdmFyIHggPSBjaGlsZHNba10uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3gnKVswXS50ZXh0Q29udGVudDsgLy9cbiAgICAgICAgICAgICAgdmFyIHkgPSBjaGlsZHNba10uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3knKVswXS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgZVNoZWVwQ2hpbGQuX3NldFBvc2l0aW9uKHRoaXMuX3BhcnNlS2V5V29yZHMoeCksIHRoaXMuX3BhcnNlS2V5V29yZHMoeSksIHRydWUpO1xuICAgICAgICAgICAgICBlU2hlZXBDaGlsZC5TdGFydCh0aGlzLmFuaW1hdGlvbkZpbGUpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgcmV0dXJuIG5vZGVGb3VuZDtcbiAgICB9XG5cbiAgICAvKlxyXG4gICAgICogQ2hlY2sgaWYgc2hlZXAgaXMgd2Fsa2luZyBvdmVyIGEgZGVmaW5lZCBIVE1MIFRBRy1lbGVtZW50XHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9jaGVja092ZXJsYXBwaW5nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jaGVja092ZXJsYXBwaW5nKCkge1xuICAgICAgdmFyIHggPSB0aGlzLmltYWdlWDtcbiAgICAgIHZhciB5ID0gdGhpcy5pbWFnZVkgKyB0aGlzLmltYWdlSDtcbiAgICAgIHZhciByZWN0O1xuICAgICAgdmFyIG1hcmdpbiA9IDIwO1xuICAgICAgaWYgKHRoaXMuSFRNTGVsZW1lbnQpIG1hcmdpbiA9IDU7XG4gICAgICBmb3IgKHZhciBpbmRleCBpbiBDT0xMSVNJT05fV0lUSCkge1xuICAgICAgICB2YXIgZWxzID0gZG9jdW1lbnQuYm9keS5nZXRFbGVtZW50c0J5VGFnTmFtZShDT0xMSVNJT05fV0lUSFtpbmRleF0pO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgcmVjdCA9IGVsc1tpXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICAgIGlmICh5ID4gcmVjdC50b3AgLSAyICYmIHkgPCByZWN0LnRvcCArIG1hcmdpbikge1xuICAgICAgICAgICAgaWYgKHggPiByZWN0LmxlZnQgJiYgeCA8IHJlY3QucmlnaHQgLSB0aGlzLmltYWdlVykge1xuICAgICAgICAgICAgICB2YXIgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbHNbaV0pO1xuICAgICAgICAgICAgICBpZiAoc3R5bGUuYm9yZGVyVG9wU3R5bGUgIT0gXCJcIiAmJiBzdHlsZS5ib3JkZXJUb3BTdHlsZSAhPSBcIm5vbmVcIiAmJiBzdHlsZS5kaXNwbGF5ICE9IFwibm9uZVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsc1tpXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8qXHJcbiAgICAgKiBUcnkgdG8gZ2V0IHRoZSB2YWx1ZSBvZiBhIG5vZGUgKGZyb20gdGhlIGN1cnJlbnQgYW5pbWF0aW9uTm9kZSksIGlmIGl0IGlzIG5vdCBwb3NzaWJsZSByZXR1cm5zIHRoZSBkZWZhdWx0VmFsdWVcclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiX2dldE5vZGVWYWx1ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0Tm9kZVZhbHVlKG5vZGVOYW1lLCB2YWx1ZU5hbWUsIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgaWYgKCF0aGlzLmFuaW1hdGlvbk5vZGUgfHwgIXRoaXMuYW5pbWF0aW9uTm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZShub2RlTmFtZSkpIHJldHVybjtcbiAgICAgIGlmICh0aGlzLmFuaW1hdGlvbk5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUobm9kZU5hbWUpWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKHZhbHVlTmFtZSlbMF0pIHtcbiAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKG5vZGVOYW1lKVswXS5nZXRFbGVtZW50c0J5VGFnTmFtZSh2YWx1ZU5hbWUpWzBdLnRleHRDb250ZW50O1xuXG4gICAgICAgIHJldHVybiB0aGlzLl9wYXJzZUtleVdvcmRzKHZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLypcclxuICAgICAqIE5leHQgc3RlcCAoZWFjaCBmcmFtZSBpcyBhIHN0ZXApXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9uZXh0RVNoZWVwU3RlcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfbmV4dEVTaGVlcFN0ZXAoKSB7XG4gICAgICB2YXIgeDEgPSB0aGlzLl9nZXROb2RlVmFsdWUoJ3N0YXJ0JywgJ3gnLCAwKTtcbiAgICAgIHZhciB5MSA9IHRoaXMuX2dldE5vZGVWYWx1ZSgnc3RhcnQnLCAneScsIDApO1xuICAgICAgdmFyIG9mZjEgPSB0aGlzLl9nZXROb2RlVmFsdWUoJ3N0YXJ0JywgJ29mZnNldHknLCAwKTtcbiAgICAgIHZhciBvcGExID0gdGhpcy5fZ2V0Tm9kZVZhbHVlKCdzdGFydCcsICdvcGFjaXR5JywgMSk7XG4gICAgICB2YXIgZGVsMSA9IHRoaXMuX2dldE5vZGVWYWx1ZSgnc3RhcnQnLCAnaW50ZXJ2YWwnLCAxMDAwKTtcbiAgICAgIHZhciB4MiA9IHRoaXMuX2dldE5vZGVWYWx1ZSgnZW5kJywgJ3gnLCAwKTtcbiAgICAgIHZhciB5MiA9IHRoaXMuX2dldE5vZGVWYWx1ZSgnZW5kJywgJ3knLCAwKTtcbiAgICAgIHZhciBvZmYyID0gdGhpcy5fZ2V0Tm9kZVZhbHVlKCdlbmQnLCAnb2Zmc2V0eScsIDApO1xuICAgICAgdmFyIG9wYTIgPSB0aGlzLl9nZXROb2RlVmFsdWUoJ2VuZCcsICdpbnRlcnZhbCcsIDEpO1xuICAgICAgdmFyIGRlbDIgPSB0aGlzLl9nZXROb2RlVmFsdWUoJ2VuZCcsICdpbnRlcnZhbCcsIDEwMDApO1xuXG4gICAgICB2YXIgcmVwZWF0ID0gdGhpcy5fcGFyc2VLZXlXb3Jkcyh0aGlzLmFuaW1hdGlvbk5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NlcXVlbmNlJylbMF0uZ2V0QXR0cmlidXRlKCdyZXBlYXQnKSk7XG4gICAgICB2YXIgcmVwZWF0ZnJvbSA9IHRoaXMuYW5pbWF0aW9uTm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2VxdWVuY2UnKVswXS5nZXRBdHRyaWJ1dGUoJ3JlcGVhdGZyb20nKTtcbiAgICAgIHZhciBncmF2aXR5ID0gdGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdncmF2aXR5Jyk7XG4gICAgICB2YXIgYm9yZGVyID0gdGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib3JkZXInKTtcblxuICAgICAgdmFyIHN0ZXBzID0gdGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdmcmFtZScpLmxlbmd0aCArICh0aGlzLmFuaW1hdGlvbk5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2ZyYW1lJykubGVuZ3RoIC0gcmVwZWF0ZnJvbSkgKiByZXBlYXQ7XG5cbiAgICAgIHZhciBpbmRleDtcblxuICAgICAgaWYgKHRoaXMuYW5pbWF0aW9uU3RlcCA8IHRoaXMuYW5pbWF0aW9uTm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZnJhbWUnKS5sZW5ndGgpIGluZGV4ID0gdGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdmcmFtZScpW3RoaXMuYW5pbWF0aW9uU3RlcF0udGV4dENvbnRlbnQ7ZWxzZSBpZiAocmVwZWF0ZnJvbSA9PSAwKSBpbmRleCA9IHRoaXMuYW5pbWF0aW9uTm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZnJhbWUnKVt0aGlzLmFuaW1hdGlvblN0ZXAgJSB0aGlzLmFuaW1hdGlvbk5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2ZyYW1lJykubGVuZ3RoXS50ZXh0Q29udGVudDtlbHNlIGluZGV4ID0gdGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdmcmFtZScpW3BhcnNlSW50KHJlcGVhdGZyb20pICsgcGFyc2VJbnQoKHRoaXMuYW5pbWF0aW9uU3RlcCAtIHJlcGVhdGZyb20pICUgKHRoaXMuYW5pbWF0aW9uTm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZnJhbWUnKS5sZW5ndGggLSByZXBlYXRmcm9tKSldLnRleHRDb250ZW50O1xuXG4gICAgICB0aGlzLkRPTWltZy5zdHlsZS5sZWZ0ID0gLXRoaXMuaW1hZ2VXICogKGluZGV4ICUgdGhpcy50aWxlc1gpICsgXCJweFwiO1xuICAgICAgdGhpcy5ET01pbWcuc3R5bGUudG9wID0gLXRoaXMuaW1hZ2VIICogcGFyc2VJbnQoaW5kZXggLyB0aGlzLnRpbGVzWCkgKyBcInB4XCI7XG5cbiAgICAgIGlmICh0aGlzLmRyYWdnaW5nIHx8IHRoaXMuaW5mb2JveCkge1xuICAgICAgICB0aGlzLmFuaW1hdGlvblN0ZXArKztcbiAgICAgICAgc2V0VGltZW91dCh0aGlzLl9uZXh0RVNoZWVwU3RlcC5iaW5kKHRoaXMpLCA1MCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuZmxpcHBlZCkge1xuICAgICAgICB4MSA9IC14MTtcbiAgICAgICAgeDIgPSAteDI7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmFuaW1hdGlvblN0ZXAgPT0gMCkgdGhpcy5fc2V0UG9zaXRpb24oeDEsIHkxLCBmYWxzZSk7ZWxzZSB0aGlzLl9zZXRQb3NpdGlvbihwYXJzZUludCh4MSkgKyBwYXJzZUludCgoeDIgLSB4MSkgKiB0aGlzLmFuaW1hdGlvblN0ZXAgLyBzdGVwcyksIHBhcnNlSW50KHkxKSArIHBhcnNlSW50KCh5MiAtIHkxKSAqIHRoaXMuYW5pbWF0aW9uU3RlcCAvIHN0ZXBzKSwgZmFsc2UpO1xuXG4gICAgICB0aGlzLmFuaW1hdGlvblN0ZXArKztcblxuICAgICAgaWYgKHRoaXMuYW5pbWF0aW9uU3RlcCA+PSBzdGVwcykge1xuICAgICAgICBpZiAodGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdhY3Rpb24nKVswXSkge1xuICAgICAgICAgIHN3aXRjaCAodGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdhY3Rpb24nKVswXS50ZXh0Q29udGVudCkge1xuICAgICAgICAgICAgY2FzZSBcImZsaXBcIjpcbiAgICAgICAgICAgICAgaWYgKHRoaXMuRE9NZGl2LnN0eWxlLnRyYW5zZm9ybSA9PSBcInJvdGF0ZVkoMGRlZylcIikge1xuICAgICAgICAgICAgICAgIHRoaXMuRE9NZGl2LnN0eWxlLnRyYW5zZm9ybSA9IFwicm90YXRlWSgxODBkZWcpXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5mbGlwcGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLkRPTWRpdi5zdHlsZS50cmFuc2Zvcm0gPSBcInJvdGF0ZVkoMGRlZylcIjtcbiAgICAgICAgICAgICAgICB0aGlzLmZsaXBwZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG5cbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5fZ2V0TmV4dFJhbmRvbU5vZGUodGhpcy5hbmltYXRpb25Ob2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzZXF1ZW5jZScpWzBdKSkgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgc2V0TmV4dCA9IGZhbHNlO1xuXG4gICAgICBpZiAoYm9yZGVyICYmIGJvcmRlclswXSAmJiBib3JkZXJbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ25leHQnKSkge1xuICAgICAgICBpZiAoeDIgPCAwICYmIHRoaXMuaW1hZ2VYIDwgMCkge1xuICAgICAgICAgIHRoaXMuaW1hZ2VYID0gMDtcbiAgICAgICAgICBzZXROZXh0ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmICh4MiA+IDAgJiYgdGhpcy5pbWFnZVggPiB0aGlzLnNjcmVlblcgLSB0aGlzLmltYWdlVykge1xuICAgICAgICAgIHRoaXMuaW1hZ2VYID0gdGhpcy5zY3JlZW5XIC0gdGhpcy5pbWFnZVc7XG4gICAgICAgICAgdGhpcy5ET01kaXYuc3R5bGUubGVmdCA9IHBhcnNlSW50KHRoaXMuaW1hZ2VYKSArIFwicHhcIjtcbiAgICAgICAgICBzZXROZXh0ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmICh5MiA8IDAgJiYgdGhpcy5pbWFnZVkgPCAwKSB7XG4gICAgICAgICAgdGhpcy5pbWFnZVkgPSAwO1xuICAgICAgICAgIHNldE5leHQgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKHkyID4gMCAmJiB0aGlzLmltYWdlWSA+IHRoaXMuc2NyZWVuSCAtIHRoaXMuaW1hZ2VIKSB7XG4gICAgICAgICAgdGhpcy5pbWFnZVkgPSB0aGlzLnNjcmVlbkggLSB0aGlzLmltYWdlSDtcbiAgICAgICAgICBzZXROZXh0ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmICh5MiA+IDApIHtcbiAgICAgICAgICBpZiAodGhpcy5fY2hlY2tPdmVybGFwcGluZygpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5pbWFnZVkgPiB0aGlzLmltYWdlSCkge1xuICAgICAgICAgICAgICB0aGlzLkhUTUxlbGVtZW50ID0gdGhpcy5fY2hlY2tPdmVybGFwcGluZygpO1xuICAgICAgICAgICAgICB0aGlzLmltYWdlWSA9IE1hdGguY2VpbCh0aGlzLkhUTUxlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCkgLSB0aGlzLmltYWdlSDtcbiAgICAgICAgICAgICAgc2V0TmV4dCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuSFRNTGVsZW1lbnQpIHtcbiAgICAgICAgICBpZiAoIXRoaXMuX2NoZWNrT3ZlcmxhcHBpbmcoKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaW1hZ2VZICsgdGhpcy5pbWFnZUggPiB0aGlzLkhUTUxlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIDMgfHwgdGhpcy5pbWFnZVkgKyB0aGlzLmltYWdlSCA8IHRoaXMuSFRNTGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIC0gMykge1xuICAgICAgICAgICAgICB0aGlzLkhUTUxlbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5pbWFnZVggPCB0aGlzLkhUTUxlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQpIHtcbiAgICAgICAgICAgICAgdGhpcy5pbWFnZVggPSBwYXJzZUludCh0aGlzLmltYWdlWCArIDMpO1xuICAgICAgICAgICAgICBzZXROZXh0ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMuaW1hZ2VYID0gcGFyc2VJbnQodGhpcy5pbWFnZVggLSAzKTtcbiAgICAgICAgICAgICAgc2V0TmV4dCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLkRPTWRpdi5zdHlsZS5sZWZ0ID0gcGFyc2VJbnQodGhpcy5pbWFnZVgpICsgXCJweFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoc2V0TmV4dCkge1xuICAgICAgICAgIGlmICghdGhpcy5fZ2V0TmV4dFJhbmRvbU5vZGUoYm9yZGVyWzBdKSkgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoIXNldE5leHQgJiYgZ3Jhdml0eSAmJiBncmF2aXR5WzBdICYmIGdyYXZpdHlbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ25leHQnKSkge1xuICAgICAgICBpZiAodGhpcy5pbWFnZVkgPCB0aGlzLnNjcmVlbkggLSB0aGlzLmltYWdlSCAtIDIpIHtcbiAgICAgICAgICBpZiAodGhpcy5IVE1MZWxlbWVudCA9PSBudWxsKSB7XG4gICAgICAgICAgICBzZXROZXh0ID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9jaGVja092ZXJsYXBwaW5nKCkpIHtcbiAgICAgICAgICAgICAgc2V0TmV4dCA9IHRydWU7XG4gICAgICAgICAgICAgIHRoaXMuSFRNTGVsZW1lbnQgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzZXROZXh0KSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX2dldE5leHRSYW5kb21Ob2RlKGdyYXZpdHlbMF0pKSByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoIXNldE5leHQpIHtcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VYIDwgLXRoaXMuaW1hZ2VXICYmIHgyIDwgMCB8fCB0aGlzLmltYWdlWCA+IHRoaXMuc2NyZWVuVyAmJiB4MiA+IDAgfHwgdGhpcy5pbWFnZVkgPCAtdGhpcy5pbWFnZUggJiYgeTEgPCAwIHx8IHRoaXMuaW1hZ2VZID4gdGhpcy5zY3JlZW5IICYmIHkyID4gMCkge1xuICAgICAgICAgIHNldE5leHQgPSB0cnVlO1xuICAgICAgICAgIGlmICghdGhpcy5pc0NoaWxkKSB7XG4gICAgICAgICAgICB0aGlzLl9zcGF3bkVTaGVlcCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc2V0VGltZW91dCh0aGlzLl9uZXh0RVNoZWVwU3RlcC5iaW5kKHRoaXMpLCBwYXJzZUludChkZWwxKSArIHBhcnNlSW50KChkZWwyIC0gZGVsMSkgKiB0aGlzLmFuaW1hdGlvblN0ZXAgLyBzdGVwcykpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBlU2hlZXA7XG59KCk7XG5cbjsiXX0=
